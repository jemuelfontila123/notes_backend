{"version":3,"sources":["components/Note.js","components/Form.js","services/notesApi.js","App.js","index.js"],"names":["Note","note","handleButton","className","content","onClick","important","Form","handleForm","title","label","value","handleInput","buttonDescription","onSubmit","type","name","onChange","getAll","a","axios","get","notes","data","addNote","post","App","useState","setNotes","newNote","setNewNote","showAll","setShowAll","addNewNote","event","preventDefault","id","length","date","Date","notesApi","concat","returnedNotes","useEffect","map","index","key","filter","target","ReactDOM","render","document","querySelector"],"mappings":"0OAaeA,EAVF,SAAC,GAA0B,IAAzBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,aACjB,OACI,yBAAKC,UAAU,eACX,4BAAKF,EAAKG,SACV,4BAAQC,QAASH,EAAcC,UAAU,aAAaF,EAAKK,UAAY,qBAAsB,oBCW1FC,G,MAfF,SAAC,GAAuE,IAAtEC,EAAqE,EAArEA,WAAYC,EAAyD,EAAzDA,MAAOC,EAAkD,EAAlDA,MAAOC,EAA2C,EAA3CA,MAAOC,EAAoC,EAApCA,YAAaC,EAAuB,EAAvBA,kBACzD,OACI,6BACI,0BAAMC,SAAUN,GACZ,gCAAQ,gCAASC,IACjB,yBAAKN,UAAU,cACf,+BAASO,GACT,2BAAOK,KAAK,OAAOC,KAAMN,EAAOO,SAAUL,EAAaD,MAAOA,KAEhE,4BAAQI,KAAK,SAASZ,UAAU,eAAeU,O,gBCA9C,GAAEK,OAPL,uCAAG,4BAAAC,EAAA,sEACSC,IAAMC,IAJd,cAGD,cACLC,EADK,yBAEJA,EAAMC,MAFF,2CAAH,qDAOcC,QAHb,uCAAG,WAAOvB,GAAP,SAAAkB,EAAA,sEACNC,IAAMK,KARA,aAQcxB,GADd,2CAAH,uDC2CEyB,EA9CH,WAAO,IAAD,EACYC,mBAAS,IADrB,mBACPL,EADO,KACAM,EADA,OAEgBD,mBAAS,IAFzB,mBAEPE,EAFO,KAEEC,EAFF,OAGiBH,oBAAS,GAH1B,mBAGPI,EAHO,KAGGC,EAHH,KAURC,EAAU,uCAAG,WAAOC,GAAP,eAAAf,EAAA,6DACfe,EAAMC,iBACAlC,EAAO,CACTmC,GAAId,EAAMe,OACVjC,QAASyB,EACTS,KAAM,IAAIC,KACVjC,WAAW,GANA,SAQTkC,EAAShB,QAAQvB,GARR,OASf2B,EAASN,EAAMmB,OAAOxC,IACtB6B,EAAW,IAVI,2CAAH,sDAYVZ,EAAM,uCAAG,4BAAAC,EAAA,sEACeqB,EAAStB,SADxB,OACPwB,EADO,OAEbd,EAASc,GAFI,2CAAH,qDAOZ,OAHAC,qBAAU,WACRzB,MACC,IAEC,6BACE,qCACA,4BAAQb,QA3BO,kBAAM2B,GAAYD,IA2BF5B,UAAU,aAAa4B,EAAU,iBAAmB,YACnF,4BACIA,GAAWT,EAAMe,OACff,EAAMsB,KAAK,SAAC3C,EAAM4C,GAAP,OAAiB,kBAAC,EAAD,CAAMC,IAAK7C,EAAKmC,GAAInC,KAAMA,EAAMC,aAAc,kBA7BjE,SAACD,EAAM4C,GACxBvB,EAAMuB,GAAOvC,WAAaL,EAAKK,UAC/BsB,EAAS,YAAIN,IA2B2EpB,CAAaD,EAAO4C,SACpGvB,EAAMyB,QAAO,SAAA9C,GAAI,OAAuB,IAAnBA,EAAKK,aAAoBsC,KAAI,SAAA3C,GAAI,OAAI,kBAAC,EAAD,CAAM6C,IAAK7C,EAAKmC,GAAInC,KAAMA,QAG1F,kBAAC,EAAD,CAAMO,WAAYyB,EAAaxB,MAAM,kBAAkBC,MAAM,cAAcC,MAAOkB,EAASjB,YAnCxE,SAACsB,GAAD,OAAWJ,EAAWI,EAAMc,OAAOrC,QAmCoEE,kBAAkB,mBCxCtJoC,IAASC,OAAO,kBAAE,EAAF,MAAUC,SAASC,cAAc,Y","file":"static/js/main.f8ca0727.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n\r\nconst Note = ({note, handleButton}) => {\r\n    return(\r\n        <div className='inline-flex'>\r\n            <li>{note.content}</li>\r\n            <button onClick={handleButton} className='btn-prime'>{note.important ? 'make not important': 'make important'}</button>\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default Note;    ","import React from 'react'\r\n\r\n\r\nconst Form = ({handleForm, title, label, value, handleInput, buttonDescription}) => {\r\n    return(\r\n        <div>\r\n            <form onSubmit={handleForm}>\r\n                <legend><strong>{title}</strong></legend>\r\n                <div className='form-group'>\r\n                <label >{label}</label>\r\n                <input type='text' name={label} onChange={handleInput} value={value}></input>\r\n              </div>\r\n              <button type='submit' className='btn-primary'>{buttonDescription}</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Form;","import axios from 'axios'\r\n\r\nconst baseUrl = '/api/notes'\r\n\r\n\r\nconst getAll = async () => {\r\n    const notes = await axios.get(baseUrl)\r\n    return notes.data;\r\n}\r\nconst addNote = async (note) => {\r\n    await axios.post(baseUrl, note);\r\n}\r\nexport default { getAll , addNote }","import React, {useEffect, useState} from 'react';\r\nimport Note from './components/Note'\r\nimport  './App.css'\r\nimport Form from './components/Form'\r\nimport notesApi from './services/notesApi'\r\n// import axios from 'axios'\r\nconst App = () => {\r\n    const [notes, setNotes] = useState([])\r\n    const [newNote, setNewNote] = useState('')\r\n    const [showAll , setShowAll] = useState(true)\r\n    const handleNoteChange = (event) => setNewNote(event.target.value)\r\n    const handleFilter = () => setShowAll(!showAll) \r\n    const handleButton = (note, index) => {\r\n        notes[index].important = !note.important;\r\n        setNotes([...notes])\r\n    }\r\n    const addNewNote = async (event) => {\r\n        event.preventDefault()\r\n        const note = {\r\n            id: notes.length,\r\n            content: newNote,\r\n            date: new Date(),\r\n            important: true\r\n        }\r\n        await notesApi.addNote(note)\r\n        setNotes(notes.concat(note))\r\n        setNewNote('')\r\n    }\r\n    const getAll = async() => {\r\n      const returnedNotes = await notesApi.getAll();\r\n      setNotes(returnedNotes);\r\n    }\r\n    useEffect(()=> {\r\n      getAll()\r\n    }, []);\r\n    return (\r\n        <div>\r\n          <h1>Notes</h1>\r\n          <button onClick={handleFilter} className='btn-green'>{showAll ? 'Show important' : 'Show All'}</button> \r\n          <ul>\r\n            { showAll && notes.length ? \r\n                notes.map( (note, index) => <Note key={note.id} note={note} handleButton={() => handleButton(note , index)}/>):\r\n                notes.filter(note => note.important === true).map(note => <Note key={note.id} note={note} />)\r\n            }\r\n          </ul>\r\n          <Form handleForm={addNewNote}  title='Adding New Note' label='Description' value={newNote} handleInput={handleNoteChange} buttonDescription='Add New Note'/>\r\n\r\n        </div>\r\n      )\r\n}\r\n\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App'\r\n\r\n\r\nReactDOM.render(< App />, document.querySelector('#root'))"],"sourceRoot":""}